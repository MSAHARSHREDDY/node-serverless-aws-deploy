# name: Deploy All Services

# on:
#   push:
#     branches:
#       - master

# jobs:
#   deploy-user-service:
#     name: Deploy User Service (Serverless)
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: root-folder/user-service
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v4

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v2
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-east-1

#       - name: Cache dependencies
#         uses: actions/cache@v4
#         with:
#           path: |
#             ~/.npm
#             root-folder/user-service/node_modules
#           key: ${{ runner.os }}-user-${{ hashFiles('root-folder/user-service/package-lock.json') }}

#       - name: Install dependencies
#         run: npm ci

#       - name: Install Serverless CLI (v3 to avoid login)
#         run: npm install -g serverless@3

#       - name: Deploy with Serverless
#         run: serverless deploy --stage dev

#   deploy-product-service:
#     name: Deploy Product Service (CDK)
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: root-folder/product-service
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v4

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v2
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-east-1

#       - name: Cache dependencies
#         uses: actions/cache@v4
#         with:
#           path: |
#             ~/.npm
#             root-folder/product-service/node_modules
#           key: ${{ runner.os }}-product-${{ hashFiles('root-folder/product-service/package-lock.json') }}

#       - name: Install dependencies
#         run: npm ci

#       - name: CDK Deploy
#         run: npx cdk deploy --require-approval never

#   deploy-transaction-service:
#     name: Deploy Transaction Service (CDK)
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: root-folder/transaction-service
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v4

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v2
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-east-1

#       - name: Cache dependencies
#         uses: actions/cache@v4
#         with:
#           path: |
#             ~/.npm
#             root-folder/transaction-service/node_modules
#           key: ${{ runner.os }}-transaction-${{ hashFiles('root-folder/transaction-service/package-lock.json') }}

#       - name: Install dependencies
#         run: npm ci

#       - name: CDK Deploy
#         run: npx cdk deploy --require-approval never







name: Node.js Monorepo CI/CD

on:
  push:
    branches: [ "master" ]

jobs:
  user-service:
    runs-on: self-hosted
    defaults:
      run:
        working-directory: root-folder/user-service

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          cache-dependency-path: root-folder/user-service/package-lock.json

      - name: Install dependencies
        run: npm ci

      # - name: Inject .env file
      #   run: |
      #     echo "${{ secrets.PROD_ENV_FILE }}" | base64 -d > .env


      - name: Deploy user-service
        run: SERVERLESS_DASHBOARD=0 npx serverless deploy --verbose

  product-service:
    runs-on: self-hosted
    needs: user-service
    defaults:
      run:
        working-directory: root-folder/product-service
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          cache-dependency-path: root-folder/product-service/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Deploy product-service
        run: npx cdk deploy --require-approval never --verbose

  transaction-service:
    runs-on: self-hosted
    needs: product-service
    defaults:
      run:
        working-directory: root-folder/transaction-service
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          cache-dependency-path: root-folder/transaction-service/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Deploy transaction-service
        run: npx cdk deploy --require-approval never --verbose
